-- http://gavinsoorma.com/2010/07/using-dbms_xplan-to-obtain-the-explain-plan-of-a-sql-statement/

SQL> set linesize 120
SQL> set pagesize 500
SQL> select * from TABLE(dbms_xplan.display_awr('a9j69t1bh6982'));

-- https://oraclespin.com/2012/02/07/how-to-generate-execution-plan-created-from-awr-snapshot/
SQL> @?/rdbms/admin/awrsqrpt.sql

-- https://uhesse.com/2010/03/26/retrieve-sql-and-execution-plan-from-awr-snapshots/
FIRST, GET THE SQLs for given begin and end snapshot
col parsed format a6
col sql_text format a40
set lines 200
set pages 300

select     
 sql_text,
 parsing_schema_name as parsed,
 elapsed_time_delta/1000/1000 as elapsed_sec,
 stat.snap_id,
 to_char(snap.end_interval_time,'dd.mm hh24:mi:ss') as snaptime,
 txt.sql_id
from     
 dba_hist_sqlstat stat,
 dba_hist_sqltext txt,
 dba_hist_snapshot snap
where     
 stat.sql_id=txt.sql_id and
 stat.snap_id=snap.snap_id and
 snap.begin_interval_time>=sysdate-1 and
 lower(sql_text) like '%&t%' and
 parsing_schema_name not in ('SYS','SYSMAN','MDSYS','WKSYS')
order by elapsed_time_delta asc;

THEN GET THE PLAN FOR EACH SQL
 select plan_table_output from table (dbms_xplan.display_awr('&sqlid'));
 
NUMBER OF TOP SQLS PER SNAPSHOT CAN BE SET AS FOLLOWS
The amount of SQL that gets collected into a snapshot can be modified with

SQL> begin
dbms_workload_repository.modify_snapshot_settings (
 topnsql=>'MAXIMUM');
end;
/
MAXIMUM (uppercase!) takes all SQL from the Library Cache into the snapshot â€“ alternative, we can specify a number of Top SQL to collect. 
